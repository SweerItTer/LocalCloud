networks:
  localcloud-network:
    driver: bridge
services:
  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password123
    ports:
      - "9000:9000"
      - "9001:9001"

  db:
    image: postgres:15  # 选择合适的 PostgreSQL 版本
    restart: always
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - localcloud-network

  backend:
    build:
      context: ./backend      # 指向包含 Dockerfile 的目录
    volumes:
      - ./backend:/app        # 将本地代码挂载到容器内 /app 目录，以便 Air 监控代码变化
    ports:
      - "8080:8080"           # 暴露端口供前端访问
    depends_on:
      - db
      - minio
    networks:
      - localcloud-network
 
  frontend:
    image: nginx:alpine  # 指定 Nginx 作为前端服务器
    volumes:
      - ./frontend/src:/usr/share/nginx/html
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - localcloud-network
    ports:
      - "80:80"
    depends_on:
      - backend

  cloudflared:
    networks:
      - localcloud-network
    image: cloudflare/cloudflared:latest
    command: tunnel --config /etc/cloudflared/config.yml --no-autoupdate run --protocol http2
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    volumes:
      - ./cloudflared/config.yml:/etc/cloudflared/config.yml
      - ./cloudflared/credentials.json:/etc/cloudflared/credentials.json
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_started

volumes:
  minio_data:
  postgres_data: 